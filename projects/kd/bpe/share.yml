preprocess:
  task: summarization # task', metavar='TASK', default="translation", choices=TASK_REGISTRY.keys(), help='task'
  source_lang:
    # list, ujson.loads
    - code_tokens.txt
    - docstring_tokens.txt
  target_lang: ~ #", default=None, metavar="TARGET", help="target language"
  # ~ path for dataset default. e.g.  for code_search_net_feng, ~/flatten = ~/.ncc/code_search_net_feng/flatten
  dataprefs:
    ruby:
      trainpref: ~/.ncc/code_search_net_feng/flatten/ruby/train #", metavar="FP", default=None, help="train file prefix"
      validpref: ~/.ncc/code_search_net_feng/flatten/ruby/valid #", metavar="FP", default=None, help="comma separated, valid file prefixes"
      testpref:  ~/.ncc/code_search_net_feng/flatten/ruby/test  #", metavar="FP", default=None, help="comma separated, test file prefixes"
#    go:
#      trainpref: ~/.ncc/code_search_net_feng/flatten/go/train #", metavar="FP", default=None, help="train file prefix"
#      validpref: ~/.ncc/code_search_net_feng/flatten/go/valid #", metavar="FP", default=None, help="comma separated, valid file prefixes"
#      testpref:  ~/.ncc/code_search_net_feng/flatten/go/test  #", metavar="FP", default=None, help="comma separated, test file prefixes"
#    java:
#      trainpref: ~/.ncc/code_search_net_feng/flatten/java/train #", metavar="FP", default=None, help="train file prefix"
#      validpref: ~/.ncc/code_search_net_feng/flatten/java/valid #", metavar="FP", default=None, help="comma separated, valid file prefixes"
#      testpref:  ~/.ncc/code_search_net_feng/flatten/java/test  #", metavar="FP", default=None, help="comma separated, test file prefixes"
#    javascript:
#      trainpref: ~/.ncc/code_search_net_feng/flatten/javascript/train #", metavar="FP", default=None, help="train file prefix"
#      validpref: ~/.ncc/code_search_net_feng/flatten/javascript/valid #", metavar="FP", default=None, help="comma separated, valid file prefixes"
#      testpref:  ~/.ncc/code_search_net_feng/flatten/javascript/test  #", metavar="FP", default=None, help="comma separated, test file prefixes"
#    python:
#      trainpref: ~/.ncc/code_search_net_feng/flatten/python/train #", metavar="FP", default=None, help="train file prefix"
#      validpref: ~/.ncc/code_search_net_feng/flatten/python/valid #", metavar="FP", default=None, help="comma separated, valid file prefixes"
#      testpref:  ~/.ncc/code_search_net_feng/flatten/python/test  #", metavar="FP", default=None, help="comma separated, test file prefixes"
#    php:
#      trainpref: ~/.ncc/code_search_net_feng/flatten/php/train #", metavar="FP", default=None, help="train file prefix"
#      validpref: ~/.ncc/code_search_net_feng/flatten/php/valid #", metavar="FP", default=None, help="comma separated, valid file prefixes"
#      testpref:  ~/.ncc/code_search_net_feng/flatten/php/test  #", metavar="FP", default=None, help="comma separated, test file prefixes"
#    python_wan:
#      trainpref: ~/.ncc/python_wan/flatten/python/train #", metavar="FP", default=None, help="train file prefix"
#      validpref: ~/.ncc/python_wan/flatten/python/valid #", metavar="FP", default=None, help="comma separated, valid file prefixes"
#      testpref:  ~/.ncc/python_wan/flatten/python/test  #", metavar="FP", default=None, help="comma separated, test file prefixes"
#    java_hu:
#      trainpref: ~/.ncc/java_hu/flatten/java/train #", metavar="FP", default=None, help="train file prefix"
#      validpref: ~/.ncc/java_hu/flatten/java/valid #", metavar="FP", default=None, help="comma separated, valid file prefixes"
#      testpref:  ~/.ncc/java_hu/flatten/java/test  #", metavar="FP", default=None, help="comma separated, test file prefixes"


  dataset_impl: mmap #', metavar='FORMAT', default='mmap', choices=get_available_dataset_impl(), help='output dataset implementation'
  destdir: ~/.ncc/kd/code_tokens_txt_docstring_tokens_txt/ #", metavar="DIR", default="data-bin", help="destination dir"
  # word frequency
  thresholdtgt: 0 #", metavar="N", default=0, type=int, help="map words appearing less than threshold times to unknown"
  thresholdsrc: 0 #", metavar="N", default=0, type=int, help="map words appearing less than threshold times to unknown"
  # word number
  #  nwordstgt: -1 #", metavar="N", default=-1, type=int, help="number of target words to retain"
  #  nwordssrc: -1 #", metavar="N", default=-1, type=int, help="number of source words to retain"
  nwordstgt: 50000 #", metavar="N", default=-1, type=int, help="number of target words to retain"
  nwordssrc: 50000 #", metavar="N", default=-1, type=int, help="number of source words to retain"
  alignfile: ~ #", metavar="ALIGN", default=None, help="an alignment file (optional)"

  joined_dictionary: 0 # ", action="store_true", help="Generate joined dictionary"
  only_source: 0 # ", action="store_true", help="Only process the source language"
  padding_factor: 8 #", metavar="N", default=8, type=int, help="Pad dictionary size to be multiple of N"
  workers: 1 # ", metavar="N", default=1, type=int, help="number of parallel workers"