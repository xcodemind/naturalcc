preprocess:
  task: retrieval # task', metavar='TASK', default="translation", choices=TASK_REGISTRY.keys(), help='task'
  source_lang:
    - bpe.joint.code_tokens
    - bpe.joint.docstring_tokens
  trainpref: ~/.ncc/code_search_net/flatten/javascript/train #", metavar="FP", default=None, help="train file prefix"
  validpref: ~/.ncc/code_search_net/flatten/javascript/valid #", metavar="FP", default=None, help="comma separated, valid file prefixes"
  testpref:  ~/.ncc/code_search_net/flatten/javascript/test  #", metavar="FP", default=None, help="comma separated, test file prefixes"

  align_suffix: ~ # ", metavar="FP", default=None, help="alignment file suffix"
#  destdir: ~/.ncc/code_search_net/summarization/data-raw/javascript/ #", metavar="DIR", default="data-bin", help="destination dir"
  destdir: ~/.ncc/code_search_net/individual/code_tokens_docstring_tokens/data-mmap/javascript #", metavar="DIR", default="data-bin", help="destination dir"
  thresholdsrc: 0 #", metavar="N", default=0, type=int, help="map words appearing less than threshold times to unknown"
  srcdict: ~
#  nwordssrc: -1 #", metavar="N", default=-1, type=int, help="number of source words to retain"
  nwordssrc: 10000 #", metavar="N", default=-1, type=int, help="number of source words to retain"
  alignfile: ~ #", metavar="ALIGN", default=None, help="an alignment file (optional)"
#  dataset_impl: raw #', metavar='FORMAT', default='mmap', choices=get_available_dataset_impl(), help='output dataset implementation'
  dataset_impl: mmap #', metavar='FORMAT', default='mmap', choices=get_available_dataset_impl(), help='output dataset implementation'
  joined_dictionary: 0 # ", action="store_true", help="Generate joined dictionary"
  padding_factor: 8 #", metavar="N", default=8, type=int, help="Pad dictionary size to be multiple of N"
  workers: 12 # ", metavar="N", default=1, type=int, help="number of parallel workers"